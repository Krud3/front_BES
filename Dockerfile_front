# STAGE 1: Build the application
FROM node:20-alpine AS builder

# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json first to leverage Docker cache
COPY package.json package-lock.json ./

# Install all dependencies (including devDependencies for 'vite build')
RUN npm install

# Copy the rest of the application code
# This includes 'src', 'public', '.env', 'vite.config.ts', etc.
COPY . .

# Run the build script from your package.json
RUN npm run build

# STAGE 2: Serve the application
FROM node:20-alpine

WORKDIR /app

# Copy package.json and package-lock.json again
COPY package.json package-lock.json ./

# Install dependencies (including 'vite' which is needed for 'npm run preview')
# If 'vite' were a production dep, we could use '--omit=dev'
RUN npm install

# Copy the built assets from the 'builder' stage
COPY --from=builder /app/dist ./dist

# Copy the Vite config file, as 'vite preview' might need it
COPY vite.config.ts .

# Expose the port the app will run on
EXPOSE 3000

# Command to run the Vite preview server
# We use '-- --host 0.0.0.0 --port 3000' to pass args to 'vite preview'
# This ensures it's accessible outside the container and runs on port 3000
CMD ["npm", "run", "preview", "--", "--host", "0.0.0.0", "--port", "3000"]